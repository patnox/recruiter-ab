<!DOCTYPE html>
<html lang="en-US"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="csrf-param" content="_csrf">
    <meta name="csrf-token" content="eDM1SmJrSlJKX2YzKV59FAl8BB0AWghrP3IDOysnOGouRwE.MxM7JQ==">
    <title>Episode 4 - Generating Models with Gii</title>
    <link href="Episode.4_files/css.css" rel="stylesheet" type="text/css">
    <meta name="keywords" content="yii, yii2, php, php framework, web, news, community, forum">
<meta name="description" content="Episode 4 - Generating Models with Gii">
<link href="Episode.4_files/all-03bfb6d0b77355d73ce0c987f512345c.css" rel="stylesheet"><style type="text/css">img[src="https://www.paypalobjects.com/en_US/i/scr/pixel.gif"]
{display:none !important;}</style><script async="" type="text/javascript" src="Episode.4_files/count.js"></script></head>
<body>

<div class="wrap">

    <nav id="w2" class="navbar-inverse navbar-fixed-top navbar" role="navigation"><div class="container"><div class="navbar-header"><button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#w2-collapse"><span class="sr-only">Toggle navigation</span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
<span class="icon-bar"></span></button><a class="navbar-brand" href="https://www.my-yii.com/">My<small><span class="glyphicon glyphicon-heart"></span></small>Yii</a></div><div id="w2-collapse" class="collapse navbar-collapse"><ul id="w3" class="navbar-nav navbar-left nav"><li><a href="https://www.my-yii.com/news/index"><span class="glyphicon glyphicon-fire"></span> News</a></li>
<li><a href="https://www.my-yii.com/extension/index"><span class="glyphicon glyphicon-th"></span> Extensions</a></li>
<li><a href="https://www.my-yii.com/learn/index"><span class="glyphicon glyphicon-book"></span> Learn</a></li>
<li><a href="https://www.my-yii.com/forum/main/index"><span class="glyphicon glyphicon-comment"></span> Forum</a></li></ul><ul id="w4" class="navbar-nav navbar-right nav"><li><a href="https://www.my-yii.com/site/signup"><span class="glyphicon glyphicon-plus"></span> Signup</a></li>
<li><a href="https://www.my-yii.com/site/login"><span class="glyphicon glyphicon-log-in"></span> Login</a></li></ul></div></div></nav>
    <div class="container-fluid container-header hidden-xs">
        <div class="container">
            <p class="lead">
                Simple and fast Signup and Login with
                <a href="https://www.my-yii.com/site/auth?authclient=facebook">
                    <img src="Episode.4_files/facebook.png" alt="Facebook logo"> Facebook
                </a>
                and
                <a href="https://www.my-yii.com/site/auth?authclient=github">
                    <img src="Episode.4_files/github.png" alt="GitHub logo"> Github
                </a>
                to My<small><span class="glyphicon glyphicon-heart"></span></small>Yii community.
            </p>
        </div>
    </div>

    <div class="container">
                <ul class="breadcrumb"><li><a href="https://www.my-yii.com/">Home</a></li>
<li><a href="https://www.my-yii.com/learn/index">Learn</a></li>
<li><a href="https://www.my-yii.com/learn/view-series/create-your-own-yii-2-powered-blog">Create your own Yii 2 powered blog</a></li>
<li class="active">Episode 4 - Generating Models with Gii</li>
</ul>        <div class="episode-view">

    <div class="row">
        
        <div class="col-md-9">

            
<div class="btn-group btn-group-justified btn-group-md" role="group" aria-label="Episodes navigation">
                    <a class="btn" href="https://www.my-yii.com/learn/view-episode/episode-3-setting-up-the-role-based-access-control-for-our-blog"><span class="glyphicon glyphicon-step-backward"></span> Episode 3 - Setting up the Rol...</a>                        <a class="btn" href="https://www.my-yii.com/learn/view-episode/episode-5-generating-crud-code-with-gii">Episode 5 - Generating CRUD co... <span class="glyphicon glyphicon-step-forward"></span></a>    </div>            <br>

            <div class="panel panel-default">

                <div class="panel-body">
                                            <p class="text-justify">Hello,<br>
In the previous episode, we have successfully created all the tables 
which we will need for our blog. Now we need to generate models which 
will represent these tables in our application.</p>

<h2>What is Gii?</h2>

<p class="text-justify">Gii is web-based code generator. With Gii we can
 quickly generate models, forms, modules, CRUD, etc.. Gii also provides 
command line interface for people who prefer to work with their console.</p>

<h2>How to use?</h2>

<p class="text-justify">In our environment we can use Gii web-based interface by going to this address:</p>

<pre><code class="url hljs coffeescript"><span class="hljs-attribute">http</span>:<span class="hljs-regexp">//</span>localhost<span class="hljs-regexp">/blog/frontend/web/gii</span>
</code></pre>

<p class="text-justify">You should see:
<img class="img-responsive img-rounded center-block" src="Episode.4_files/9.png" alt="Gii code generator" title="Gii code generator"></p>

<h3>Generating Models</h3>

<p class="text-justify">First, we need to generate Models for all tables
 we have created.
To generate model click on the “Start” button under the Model Generator 
section. Model Generator generates an ActiveRecord class for the 
specified database table.</p>

<h4>Post Model</h4>

<p class="text-justify">To generate Post Model fill the Model Generator form with following:<br>
- Table name: <code>post</code><br>
- Model class: <code>Post</code><br>
- Namespace: change <code>app\models</code> to <code>common\models</code><br>
- Base class: leave the default value<br>
- Database connection ID: leave the default value</p>

<p class="text-justify">Make sure that “Generate Relations” option is set to <code>All relations</code> and click on the “Preview” button. After clicking you should see:</p>

<p class="text-justify"><img class="img-responsive img-rounded center-block" src="Episode.4_files/10.png" alt="Gii create new Model detail" title="Gii create new Model detail"></p>

<p class="text-justify">Make sure that action “create” is checked and click on the “Generate” button.
You should see:</p>

<pre><code class="hljs nginx"><span class="hljs-title">The</span> code has been generated successfully.
</code></pre>

<p class="text-justify">and something similar to this:</p>

<pre><code class="hljs cpp">Generating code <span class="hljs-keyword">using</span> <span class="hljs-keyword">template</span> <span class="hljs-string">"/Users/jpulik/Sites/blog/vendor/yiisoft/yii2-gii/generators/model/default"</span>...
generated /Users/jpulik/Sites/blog/common/models/Post.php
done!
</code></pre>

<blockquote>
  <p class="text-justify">Tip:
  If do you see error similar to this one:
  <img class="img-responsive img-rounded center-block" src="Episode.4_files/56.png" alt="Gii Access Rights Error" title="Gii Access Rights Error">
  You should set the right access rights to your project files. Do it with this command (OSX and Linux from console):
  <code>sudo chmod -R a+w ~/Sites/blog/</code>
  Replace <code>~/Sites/blog/</code> with path to the root folder of your Yii2 project.</p>
</blockquote>

<p class="text-justify">Now check your <code>common/models</code> directory and you should be able to see generated <code>Post</code> model. Generated file look like this (comments are deleted to save some space):</p>

<pre><code class="php hljs"><span class="hljs-preprocessor">&lt;?php</span>

<span class="hljs-keyword">namespace</span> <span class="hljs-title">common</span>\<span class="hljs-title">models</span>;

<span class="hljs-keyword">use</span> <span class="hljs-title">Yii</span>;

<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Post</span> <span class="hljs-keyword">extends</span> \<span class="hljs-title">yii</span>\<span class="hljs-title">db</span>\<span class="hljs-title">ActiveRecord</span>
</span>{
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">tableName</span><span class="hljs-params">()</span>
    </span>{
        <span class="hljs-keyword">return</span> <span class="hljs-string">'post'</span>;
    }

    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">rules</span><span class="hljs-params">()</span>
    </span>{
        <span class="hljs-keyword">return</span> [
            [[<span class="hljs-string">'title'</span>, <span class="hljs-string">'slug'</span>, <span class="hljs-string">'content'</span>, <span class="hljs-string">'created_at'</span>, <span class="hljs-string">'created_by'</span>, <span class="hljs-string">'category_id'</span>], <span class="hljs-string">'required'</span>],
            [[<span class="hljs-string">'lead_text'</span>, <span class="hljs-string">'content'</span>], <span class="hljs-string">'string'</span>],
            [[<span class="hljs-string">'created_at'</span>, <span class="hljs-string">'updated_at'</span>], <span class="hljs-string">'safe'</span>],
            [[<span class="hljs-string">'created_by'</span>, <span class="hljs-string">'updated_by'</span>, <span class="hljs-string">'category_id'</span>], <span class="hljs-string">'integer'</span>],
            [[<span class="hljs-string">'title'</span>, <span class="hljs-string">'slug'</span>, <span class="hljs-string">'lead_photo'</span>], <span class="hljs-string">'string'</span>, <span class="hljs-string">'max'</span> =&gt; <span class="hljs-number">128</span>],
            [[<span class="hljs-string">'meta_description'</span>], <span class="hljs-string">'string'</span>, <span class="hljs-string">'max'</span> =&gt; <span class="hljs-number">160</span>],
            [[<span class="hljs-string">'title'</span>], <span class="hljs-string">'unique'</span>],
            [[<span class="hljs-string">'slug'</span>], <span class="hljs-string">'unique'</span>],
            [[<span class="hljs-string">'category_id'</span>], <span class="hljs-string">'exist'</span>, <span class="hljs-string">'skipOnError'</span> =&gt; <span class="hljs-keyword">true</span>, <span class="hljs-string">'targetClass'</span> =&gt; Category::className(), <span class="hljs-string">'targetAttribute'</span> =&gt; [<span class="hljs-string">'category_id'</span> =&gt; <span class="hljs-string">'id'</span>]],
            [[<span class="hljs-string">'created_by'</span>], <span class="hljs-string">'exist'</span>, <span class="hljs-string">'skipOnError'</span> =&gt; <span class="hljs-keyword">true</span>, <span class="hljs-string">'targetClass'</span> =&gt; User::className(), <span class="hljs-string">'targetAttribute'</span> =&gt; [<span class="hljs-string">'created_by'</span> =&gt; <span class="hljs-string">'id'</span>]],
            [[<span class="hljs-string">'updated_by'</span>], <span class="hljs-string">'exist'</span>, <span class="hljs-string">'skipOnError'</span> =&gt; <span class="hljs-keyword">true</span>, <span class="hljs-string">'targetClass'</span> =&gt; User::className(), <span class="hljs-string">'targetAttribute'</span> =&gt; [<span class="hljs-string">'updated_by'</span> =&gt; <span class="hljs-string">'id'</span>]],
        ];
    }

    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">attributeLabels</span><span class="hljs-params">()</span>
    </span>{
        <span class="hljs-keyword">return</span> [
            <span class="hljs-string">'id'</span> =&gt; <span class="hljs-string">'ID'</span>,
            <span class="hljs-string">'title'</span> =&gt; <span class="hljs-string">'Title'</span>,
            <span class="hljs-string">'slug'</span> =&gt; <span class="hljs-string">'Slug'</span>,
            <span class="hljs-string">'lead_photo'</span> =&gt; <span class="hljs-string">'Lead Photo'</span>,
            <span class="hljs-string">'lead_text'</span> =&gt; <span class="hljs-string">'Lead Text'</span>,
            <span class="hljs-string">'content'</span> =&gt; <span class="hljs-string">'Content'</span>,
            <span class="hljs-string">'meta_description'</span> =&gt; <span class="hljs-string">'Meta Description'</span>,
            <span class="hljs-string">'created_at'</span> =&gt; <span class="hljs-string">'Created At'</span>,
            <span class="hljs-string">'updated_at'</span> =&gt; <span class="hljs-string">'Updated At'</span>,
            <span class="hljs-string">'created_by'</span> =&gt; <span class="hljs-string">'Created By'</span>,
            <span class="hljs-string">'updated_by'</span> =&gt; <span class="hljs-string">'Updated By'</span>,
            <span class="hljs-string">'category_id'</span> =&gt; <span class="hljs-string">'Category ID'</span>,
        ];
    }

    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getCategory</span><span class="hljs-params">()</span>
    </span>{
        <span class="hljs-keyword">return</span> <span class="hljs-variable">$this</span>-&gt;hasOne(Category::className(), [<span class="hljs-string">'id'</span> =&gt; <span class="hljs-string">'category_id'</span>]);
    }

    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getCreatedBy</span><span class="hljs-params">()</span>
    </span>{
        <span class="hljs-keyword">return</span> <span class="hljs-variable">$this</span>-&gt;hasOne(User::className(), [<span class="hljs-string">'id'</span> =&gt; <span class="hljs-string">'created_by'</span>]);
    }

    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getUpdatedBy</span><span class="hljs-params">()</span>
    </span>{
        <span class="hljs-keyword">return</span> <span class="hljs-variable">$this</span>-&gt;hasOne(User::className(), [<span class="hljs-string">'id'</span> =&gt; <span class="hljs-string">'updated_by'</span>]);
    }

    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getPostTags</span><span class="hljs-params">()</span>
    </span>{
        <span class="hljs-keyword">return</span> <span class="hljs-variable">$this</span>-&gt;hasMany(PostTag::className(), [<span class="hljs-string">'post_id'</span> =&gt; <span class="hljs-string">'id'</span>]);
    }
}
</code></pre>

<h3>Explaining generated model</h3>

<h4><code>rules()</code> method (Validation rules)</h4>

<blockquote>
  <p class="text-justify">When the data for a model is received from end
 users, it should be validated to make sure it satisfies certain rules 
(called validation rules, also known as business rules). For example, 
given a ContactForm model, you may want to make sure all attributes are 
not empty and the email attribute contains a valid email address. If the
 values for some attributes do not satisfy the corresponding business 
rules, appropriate error messages should be displayed to help the user 
to fix the errors. <sup id="fnref:1"><a target="_blank" href="#fn:1" class="footnote-ref">1</a></sup></p>
</blockquote>

<p class="text-justify">To declare validation rules associated with a model, we will override the <code>yii\base\Model::rules()</code> method by returning the rules that the model attributes should satisfy.</p>

<h4><code>attributeLabels()</code> method</h4>

<p class="text-justify">In this method we are declaring attribute 
labels. For applications supporting multiple languages, we can translate
 them here with <code>Yii::t()</code> component.</p>

<h4>Other methods (<code>getCategory()</code>, <code>getCreatedBy()</code>, …)</h4>

<p class="text-justify">Remaining model methods are generated on the 
basis of the relations in database. To stay simple I won’t explain how 
exactly this works. We will take a closer look to this problematics in 
the another episode. 
For now we only need to know that <code>getCategory()</code> method will give us category which is associated with the current <code>Post</code> model. Example:</p>

<pre><code class="php hljs"><span class="hljs-variable">$post</span>-&gt;category; <span class="hljs-comment">// is the concrete `Category` object</span>
<span class="hljs-variable">$post</span>-&gt;getCategory(); <span class="hljs-comment">// returns an ActiveQuery instance</span>
</code></pre>

<p class="text-justify">And <code>getPostTags()</code> method returns all ‘PostTag’ models associated with the current <code>Post</code> model</p>

<pre><code class="php hljs"><span class="hljs-variable">$post</span>-&gt;postTags; <span class="hljs-comment">// is an array of `PostTags` objects</span>
<span class="hljs-variable">$post</span>-&gt;getPostTags(); <span class="hljs-comment">// returns an ActiveQuery instance</span>
</code></pre>

<h3>Generating other models</h3>

<p class="text-justify">We will generate other models the same way as generating the <code>Post</code> model.</p>

<p class="text-justify">For generating <code>Tag</code> model fill the Model Generator form with:<br>
- Table name: <code>tag</code><br>
- Model class: <code>Tag</code><br>
- Namespace: <code>common\models</code><br>
- Base class: leave the default value<br>
- Database connection ID: leave the default value</p>

<p class="text-justify">For generating <code>PostTag</code> model fill the Model Generator form with:<br>
- Table name: <code>post_tag</code><br>
- Model class: <code>PostTag</code><br>
- Namespace: <code>common\models</code><br>
- Base class: leave the default value<br>
- Database connection ID: leave the default value</p>

<p class="text-justify">For generating <code>Category</code> model fill the Model Generator form with:<br>
- Table name: <code>category</code><br>
- Model class: <code>Category</code><br>
- Namespace: <code>common\models</code><br>
- Base class: leave the default value<br>
- Database connection ID: leave the default value</p>

<h3>Enhancing and finalizing generated models</h3>

<h4>Attaching Behaviors</h4>

<p class="text-justify">We will attach the behaviors to our models 
statically. To attach a behavior statically, we will override the 
behaviors() method of the component class to which the behavior is being
 attached. The behaviors() method returns a list of behavior 
configurations.</p>

<p class="text-justify">Basic types of Yii 2 behaviors:</p>

<ol>
<li><code>yii\behaviors\AttributeBehavior</code> - Automatically assigns a specified value to one or multiple attributes of an ActiveRecord object when certain events happen.</li>
<li><code>yii\behaviors\BlameableBehavior</code> - Automatically fills the specified attributes with the current user ID.</li>
<li><code>yii\behaviors\SluggableBehavior</code> - Automatically fills the specified attribute with a value that can be used a slug in a URL.</li>
<li><code>yii\behaviors\TimestampBehavior</code> - Automatically fills the specified attributes with the current timestamp.</li>
</ol>

<h4>Post model</h4>

<p class="text-justify">In our blog, we will use <code>BlameableBehavior</code>, <code>SluggableBehavior</code> and <code>TimestampBehavior</code>. We will describe it best on the example. So let’s finalize our <code>Post</code> model. After the <code>tableName()</code> method we will add our new <code>behaviors()</code> method:</p>

<pre><code class="php hljs"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">behaviors</span><span class="hljs-params">()</span>
</span>{
    <span class="hljs-keyword">return</span> [
        <span class="hljs-string">'timestamp'</span> =&gt; [
            <span class="hljs-string">'class'</span> =&gt; TimestampBehavior::className(),
            <span class="hljs-string">'attributes'</span> =&gt; [
                ActiveRecord::EVENT_BEFORE_INSERT =&gt; [<span class="hljs-string">'created_at'</span>, <span class="hljs-string">'updated_at'</span>],
                ActiveRecord::EVENT_BEFORE_UPDATE =&gt; [<span class="hljs-string">'updated_at'</span>],
            ],
            <span class="hljs-string">'value'</span> =&gt; <span class="hljs-keyword">new</span> Expression(<span class="hljs-string">'NOW()'</span>),
        ],
        [
            <span class="hljs-string">'class'</span> =&gt; BlameableBehavior::className(),
            <span class="hljs-string">'createdByAttribute'</span> =&gt; <span class="hljs-string">'created_by'</span>,
            <span class="hljs-string">'updatedByAttribute'</span> =&gt; <span class="hljs-string">'updated_by'</span>,
        ],
        [
            <span class="hljs-string">'class'</span> =&gt; SluggableBehavior::className(),
            <span class="hljs-string">'attribute'</span> =&gt; <span class="hljs-string">'title'</span>,
            <span class="hljs-string">'slugAttribute'</span> =&gt; <span class="hljs-string">'slug'</span>,
        ],
    ];
}
</code></pre>

<p class="text-justify">Do not forget to add these lines to your use section:</p>

<pre><code class="php hljs"><span class="hljs-keyword">use</span> <span class="hljs-title">yii</span>\<span class="hljs-title">db</span>\<span class="hljs-title">ActiveRecord</span>;
<span class="hljs-keyword">use</span> <span class="hljs-title">yii</span>\<span class="hljs-title">behaviors</span>\<span class="hljs-title">BlameableBehavior</span>;
<span class="hljs-keyword">use</span> <span class="hljs-title">yii</span>\<span class="hljs-title">behaviors</span>\<span class="hljs-title">SluggableBehavior</span>;
<span class="hljs-keyword">use</span> <span class="hljs-title">yii</span>\<span class="hljs-title">behaviors</span>\<span class="hljs-title">TimestampBehavior</span>;
<span class="hljs-keyword">use</span> <span class="hljs-title">yii</span>\<span class="hljs-title">db</span>\<span class="hljs-title">Expression</span>;
</code></pre>

<p class="text-justify">Also, we must edit our <code>rules()</code> method. We have to remove <code>created_at</code>, <code>created_by</code> and slug attributes from <code>required</code> array because they are filled automatically before saving model, so we don’t want to validate them on the users side:</p>

<pre><code class="php hljs"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">rules</span><span class="hljs-params">()</span>
    </span>{
        <span class="hljs-keyword">return</span> [
            [[<span class="hljs-string">'title'</span>, <span class="hljs-string">'content'</span>, <span class="hljs-string">'category_id'</span>], <span class="hljs-string">'required'</span>],
            [[<span class="hljs-string">'lead_text'</span>, <span class="hljs-string">'content'</span>], <span class="hljs-string">'string'</span>],
            [[<span class="hljs-string">'created_at'</span>, <span class="hljs-string">'updated_at'</span>], <span class="hljs-string">'safe'</span>],
            [[<span class="hljs-string">'created_by'</span>, <span class="hljs-string">'updated_by'</span>, <span class="hljs-string">'category_id'</span>], <span class="hljs-string">'integer'</span>],
            [[<span class="hljs-string">'title'</span>, <span class="hljs-string">'slug'</span>, <span class="hljs-string">'lead_photo'</span>], <span class="hljs-string">'string'</span>, <span class="hljs-string">'max'</span> =&gt; <span class="hljs-number">128</span>],
            [[<span class="hljs-string">'meta_description'</span>], <span class="hljs-string">'string'</span>, <span class="hljs-string">'max'</span> =&gt; <span class="hljs-number">160</span>],
            [[<span class="hljs-string">'title'</span>], <span class="hljs-string">'unique'</span>],
            [[<span class="hljs-string">'slug'</span>], <span class="hljs-string">'unique'</span>],
            [[<span class="hljs-string">'category_id'</span>], <span class="hljs-string">'exist'</span>, <span class="hljs-string">'skipOnError'</span> =&gt; <span class="hljs-keyword">true</span>, <span class="hljs-string">'targetClass'</span> =&gt; Category::className(), <span class="hljs-string">'targetAttribute'</span> =&gt; [<span class="hljs-string">'category_id'</span> =&gt; <span class="hljs-string">'id'</span>]],
            [[<span class="hljs-string">'created_by'</span>], <span class="hljs-string">'exist'</span>, <span class="hljs-string">'skipOnError'</span> =&gt; <span class="hljs-keyword">true</span>, <span class="hljs-string">'targetClass'</span> =&gt; User::className(), <span class="hljs-string">'targetAttribute'</span> =&gt; [<span class="hljs-string">'created_by'</span> =&gt; <span class="hljs-string">'id'</span>]],
            [[<span class="hljs-string">'updated_by'</span>], <span class="hljs-string">'exist'</span>, <span class="hljs-string">'skipOnError'</span> =&gt; <span class="hljs-keyword">true</span>, <span class="hljs-string">'targetClass'</span> =&gt; User::className(), <span class="hljs-string">'targetAttribute'</span> =&gt; [<span class="hljs-string">'updated_by'</span> =&gt; <span class="hljs-string">'id'</span>]],
        ];
    }
</code></pre>

<h4>Category model</h4>

<p class="text-justify">Our Category model should look like this after enhancement:</p>

<pre><code class="php hljs"><span class="hljs-preprocessor">&lt;?php</span>

<span class="hljs-keyword">namespace</span> <span class="hljs-title">common</span>\<span class="hljs-title">models</span>;

<span class="hljs-keyword">use</span> <span class="hljs-title">Yii</span>;
<span class="hljs-keyword">use</span> <span class="hljs-title">yii</span>\<span class="hljs-title">db</span>\<span class="hljs-title">ActiveRecord</span>;
<span class="hljs-keyword">use</span> <span class="hljs-title">yii</span>\<span class="hljs-title">behaviors</span>\<span class="hljs-title">SluggableBehavior</span>;
<span class="hljs-keyword">use</span> <span class="hljs-title">yii</span>\<span class="hljs-title">behaviors</span>\<span class="hljs-title">TimestampBehavior</span>;
<span class="hljs-keyword">use</span> <span class="hljs-title">yii</span>\<span class="hljs-title">db</span>\<span class="hljs-title">Expression</span>;

<span class="hljs-comment">/**
 * This is the model class for table "category".
 *
 * <span class="hljs-doctag">@property</span> integer $id
 * <span class="hljs-doctag">@property</span> string $name
 * <span class="hljs-doctag">@property</span> string $slug
 * <span class="hljs-doctag">@property</span> string $created_at
 * <span class="hljs-doctag">@property</span> string $updated_at
 *
 * <span class="hljs-doctag">@property</span> Post[] $posts
 */</span>
<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Category</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">ActiveRecord</span>
</span>{
    <span class="hljs-comment">/**
     * <span class="hljs-doctag">@inheritdoc</span>
     */</span>
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">tableName</span><span class="hljs-params">()</span>
    </span>{
        <span class="hljs-keyword">return</span> <span class="hljs-string">'category'</span>;
    }

    <span class="hljs-comment">/**
     * <span class="hljs-doctag">@inheritdoc</span>
     */</span>
    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">behaviors</span><span class="hljs-params">()</span>
    </span>{
        <span class="hljs-keyword">return</span> [
            <span class="hljs-string">'timestamp'</span> =&gt; [
                <span class="hljs-string">'class'</span> =&gt; TimestampBehavior::className(),
                <span class="hljs-string">'attributes'</span> =&gt; [
                    ActiveRecord::EVENT_BEFORE_INSERT =&gt; [<span class="hljs-string">'created_at'</span>, <span class="hljs-string">'updated_at'</span>],
                    ActiveRecord::EVENT_BEFORE_UPDATE =&gt; [<span class="hljs-string">'updated_at'</span>],
                ],
                <span class="hljs-string">'value'</span> =&gt; <span class="hljs-keyword">new</span> Expression(<span class="hljs-string">'NOW()'</span>),
            ],
            [
                <span class="hljs-string">'class'</span> =&gt; SluggableBehavior::className(),
                <span class="hljs-string">'attribute'</span> =&gt; <span class="hljs-string">'name'</span>,
                <span class="hljs-string">'slugAttribute'</span> =&gt; <span class="hljs-string">'slug'</span>,
            ],
        ];
    }

    <span class="hljs-comment">/**
     * <span class="hljs-doctag">@inheritdoc</span>
     */</span>
    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">rules</span><span class="hljs-params">()</span>
    </span>{
        <span class="hljs-keyword">return</span> [
            [[<span class="hljs-string">'name'</span>], <span class="hljs-string">'required'</span>],
            [[<span class="hljs-string">'created_at'</span>, <span class="hljs-string">'updated_at'</span>], <span class="hljs-string">'safe'</span>],
            [[<span class="hljs-string">'name'</span>, <span class="hljs-string">'slug'</span>], <span class="hljs-string">'string'</span>, <span class="hljs-string">'max'</span> =&gt; <span class="hljs-number">64</span>],
            [[<span class="hljs-string">'meta_description'</span>], <span class="hljs-string">'string'</span>, <span class="hljs-string">'max'</span> =&gt; <span class="hljs-number">160</span>],
            [[<span class="hljs-string">'name'</span>], <span class="hljs-string">'unique'</span>],
            [[<span class="hljs-string">'slug'</span>], <span class="hljs-string">'unique'</span>]
        ];
    }

    <span class="hljs-comment">/**
     * <span class="hljs-doctag">@inheritdoc</span>
     */</span>
    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">attributeLabels</span><span class="hljs-params">()</span>
    </span>{
        <span class="hljs-keyword">return</span> [
            <span class="hljs-string">'id'</span> =&gt; <span class="hljs-string">'ID'</span>,
            <span class="hljs-string">'name'</span> =&gt; <span class="hljs-string">'Name'</span>,
            <span class="hljs-string">'slug'</span> =&gt; <span class="hljs-string">'Slug'</span>,
            <span class="hljs-string">'meta_description'</span> =&gt; <span class="hljs-string">'Meta Description'</span>,
            <span class="hljs-string">'created_at'</span> =&gt; <span class="hljs-string">'Created At'</span>,
            <span class="hljs-string">'updated_at'</span> =&gt; <span class="hljs-string">'Updated At'</span>,
        ];
    }

    <span class="hljs-comment">/**
     * <span class="hljs-doctag">@return</span> \yii\db\ActiveQuery
     */</span>
    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getPosts</span><span class="hljs-params">()</span>
    </span>{
        <span class="hljs-keyword">return</span> <span class="hljs-variable">$this</span>-&gt;hasMany(Post::className(), [<span class="hljs-string">'category_id'</span> =&gt; <span class="hljs-string">'id'</span>]);
    }
}
</code></pre>

<h4>Tag model</h4>

<p class="text-justify">Our Tag model should look like this after enhancement:</p>

<pre><code class="php hljs"><span class="hljs-preprocessor">&lt;?php</span>

<span class="hljs-keyword">namespace</span> <span class="hljs-title">common</span>\<span class="hljs-title">models</span>;

<span class="hljs-keyword">use</span> <span class="hljs-title">Yii</span>;
<span class="hljs-keyword">use</span> <span class="hljs-title">yii</span>\<span class="hljs-title">db</span>\<span class="hljs-title">ActiveRecord</span>;
<span class="hljs-keyword">use</span> <span class="hljs-title">yii</span>\<span class="hljs-title">behaviors</span>\<span class="hljs-title">TimestampBehavior</span>;
<span class="hljs-keyword">use</span> <span class="hljs-title">yii</span>\<span class="hljs-title">db</span>\<span class="hljs-title">Expression</span>;

<span class="hljs-comment">/**
 * This is the model class for table "tag".
 *
 * <span class="hljs-doctag">@property</span> integer $id
 * <span class="hljs-doctag">@property</span> string $name
 * <span class="hljs-doctag">@property</span> string $created_at
 * <span class="hljs-doctag">@property</span> string $updated_at
 */</span>
<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Tag</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">ActiveRecord</span>
</span>{
    <span class="hljs-comment">/**
     * <span class="hljs-doctag">@inheritdoc</span>
     */</span>
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">tableName</span><span class="hljs-params">()</span>
    </span>{
        <span class="hljs-keyword">return</span> <span class="hljs-string">'tag'</span>;
    }

    <span class="hljs-comment">/**
     * <span class="hljs-doctag">@inheritdoc</span>
     */</span>
    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">behaviors</span><span class="hljs-params">()</span>
    </span>{
        <span class="hljs-keyword">return</span> [
            <span class="hljs-string">'timestamp'</span> =&gt; [
                <span class="hljs-string">'class'</span> =&gt; TimestampBehavior::className(),
                <span class="hljs-string">'attributes'</span> =&gt; [
                    ActiveRecord::EVENT_BEFORE_INSERT =&gt; [<span class="hljs-string">'created_at'</span>, <span class="hljs-string">'updated_at'</span>],
                    ActiveRecord::EVENT_BEFORE_UPDATE =&gt; [<span class="hljs-string">'updated_at'</span>],
                ],
                <span class="hljs-string">'value'</span> =&gt; <span class="hljs-keyword">new</span> Expression(<span class="hljs-string">'NOW()'</span>),
            ]
        ];
    }

    <span class="hljs-comment">/**
     * <span class="hljs-doctag">@inheritdoc</span>
     */</span>
    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">rules</span><span class="hljs-params">()</span>
    </span>{
        <span class="hljs-keyword">return</span> [
            [[<span class="hljs-string">'name'</span>], <span class="hljs-string">'required'</span>],
            [[<span class="hljs-string">'created_at'</span>, <span class="hljs-string">'updated_at'</span>], <span class="hljs-string">'safe'</span>],
            [[<span class="hljs-string">'name'</span>], <span class="hljs-string">'string'</span>, <span class="hljs-string">'max'</span> =&gt; <span class="hljs-number">64</span>],
            [[<span class="hljs-string">'name'</span>], <span class="hljs-string">'unique'</span>]
        ];
    }

    <span class="hljs-comment">/**
     * <span class="hljs-doctag">@inheritdoc</span>
     */</span>
    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">attributeLabels</span><span class="hljs-params">()</span>
    </span>{
        <span class="hljs-keyword">return</span> [
            <span class="hljs-string">'id'</span> =&gt; <span class="hljs-string">'ID'</span>,
            <span class="hljs-string">'name'</span> =&gt; <span class="hljs-string">'Name'</span>,
            <span class="hljs-string">'created_at'</span> =&gt; <span class="hljs-string">'Created At'</span>,
            <span class="hljs-string">'updated_at'</span> =&gt; <span class="hljs-string">'Updated At'</span>,
        ];
    }

    <span class="hljs-comment">/**
     * <span class="hljs-doctag">@return</span> \yii\db\ActiveQuery
     */</span>
    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getPostTags</span><span class="hljs-params">()</span>
    </span>{
        <span class="hljs-keyword">return</span> <span class="hljs-variable">$this</span>-&gt;hasMany(PostTag::className(), [<span class="hljs-string">'tag_id'</span> =&gt; <span class="hljs-string">'id'</span>]);
    }
}
</code></pre>

<p class="text-justify">We will continue building our blog in next 
episode. If do you have any questions regarding to this episode, please 
write them below to the comments section.</p>

<p class="text-justify">Download files from this episode: <a target="_blank" href="https://www.my-yii.com/uploads/learn/blog/episode_04_399214.zip">episode_04.zip</a>.</p>

<div class="footnotes">
<hr>
<ol>

<li id="fn:1">
<p class="text-justify"><a target="_blank" href="http://www.yiiframework.com/doc-2.0/guide-structure-models.html#validation-rules">Official Yii Guide: Validation rules</a>&nbsp;<a target="_blank" href="#fnref:1" class="footnote-backref">↩︎</a></p>
</li>

</ol>
</div>
                                    </div>

                <div class="panel-footer">
                    <span class="glyphicon glyphicon-user"></span> Jaroslav Pulik                    <div class="pull-right">
                        <span class="glyphicon glyphicon-calendar"></span> Created: Sep 26, 2015                        <span class="glyphicon glyphicon-calendar"></span> Last updated: May 29, 2016                    </div>
                </div>

            </div>

            
<div class="btn-group btn-group-justified btn-group-md" role="group" aria-label="Episodes navigation">
                    <a class="btn" href="https://www.my-yii.com/learn/view-episode/episode-3-setting-up-the-role-based-access-control-for-our-blog"><span class="glyphicon glyphicon-step-backward"></span> Episode 3 - Setting up the Rol...</a>                        <a class="btn" href="https://www.my-yii.com/learn/view-episode/episode-5-generating-crud-code-with-gii">Episode 5 - Generating CRUD co... <span class="glyphicon glyphicon-step-forward"></span></a>    </div>
            <hr>

                            <!-- Comments section -->
                <div class="comment-index">
    <div id="p0" data-pjax-container="" data-pjax-push-state="" data-pjax-timeout="1000">    
    
<div class="comment-form">

    
        <div class="alert alert-warning">
            <p class="text-center">
                You have to log in before you can post new comments
            </p>
        </div>

        <div class="row">
            <div class="col-md-6">
                
<p class="lead">Log in</p>

<form id="login-form" action="/site/login" method="post" role="form">
<input name="_csrf" value="eDM1SmJrSlJKX2YzKV59FAl8BB0AWghrP3IDOysnOGouRwE.MxM7JQ==" type="hidden">
<div class="form-group field-loginform-email required">

<input id="loginform-email" class="form-control" name="LoginForm[email]" placeholder="Email" aria-required="true" type="text">

<p class="help-block help-block-error"></p>
</div>
<div class="form-group field-loginform-password required">

<input id="loginform-password" class="form-control" name="LoginForm[password]" placeholder="Password" aria-required="true" type="password">

<p class="help-block help-block-error"></p>
</div>
<div class="form-group field-loginform-rememberme">
<div class="checkbox">
<label for="loginform-rememberme">
<input name="LoginForm[rememberMe]" value="0" type="hidden"><input id="loginform-rememberme" name="LoginForm[rememberMe]" value="1" checked="checked" type="checkbox">
Remember Me
</label>
<p class="help-block help-block-error"></p>

</div>
</div>
    <div style="color:#999;margin:1em 0">
        If you forgot your password you can <a href="https://www.my-yii.com/site/request-password-reset">reset it</a>.
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary btn-block" name="login-button">Login</button>    </div>

</form>
<hr>

<p class="text-center">
    Log in with
    <a href="https://www.my-yii.com/site/auth?authclient=facebook">
        <img src="Episode.4_files/facebook.png" alt="Facebook logo"> Facebook
    </a>
    or
    <a href="https://www.my-yii.com/site/auth?authclient=github">
        <img src="Episode.4_files/github.png" alt="GitHub logo"> Github
    </a>
</p>
            </div>
            <div class="col-md-6">
                
<p class="lead">Register</p>

<form id="form-signup" action="/site/signup" method="post" role="form">
<input name="_csrf" value="eDM1SmJrSlJKX2YzKV59FAl8BB0AWghrP3IDOysnOGouRwE.MxM7JQ==" type="hidden">
<div class="form-group field-signupform-username required">

<input id="signupform-username" class="form-control" name="SignupForm[username]" placeholder="Username" aria-required="true" type="text">

<p class="help-block help-block-error"></p>
</div>
<div class="form-group field-signupform-email">

<input id="signupform-email" class="form-control" name="SignupForm[email]" placeholder="Email" type="text">

<p class="help-block help-block-error"></p>
</div>
<div class="form-group field-signupform-password">

<input id="signupform-password" class="form-control" name="SignupForm[password]" placeholder="Password" type="password">

<p class="help-block help-block-error"></p>
</div>
<div class="form-group field-signupform-agreewithrules required">
<div class="checkbox">
<label for="signupform-agreewithrules">
<input name="SignupForm[agreeWithRules]" value="0" type="hidden"><input id="signupform-agreewithrules" name="SignupForm[agreeWithRules]" value="1" type="checkbox">

<button type="button" class="btn-link" data-toggle="modal" data-target="#w0">I have read and agree with the My-Yii rules</button>
<div id="w0" class="fade modal" role="dialog" tabindex="-1">
<div class="modal-dialog modal-lg">
<div class="modal-content">
<div class="modal-header">
<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
My-Yii.com rules
</div>
<div class="modal-body">

<p class="text-justify">
    Registration to this website is free! We do insist that you abide by the rules and policies detailed below.
</p>

<p class="text-justify">
    Although the administrators and moderators of My-Yii.com will 
attempt to keep all objectionable messages off this site, it is 
impossible for us to review all messages.
    All messages express the views of the author, and neither the owners
 of My-Yii.com will be held responsible for the content of any message.
</p>

<p class="text-justify">
    By agreeing to these rules, you warrant that you will not post any 
messages that are obscene, vulgar, sexually-oriented, hateful, 
threatening, or otherwise violative of any laws.
</p>

<p class="text-justify">
    The owners of My-Yii.com reserve the right to remove, edit, move or close any content item for any reason.
</p>

<p class="text-justify">
    The information contained in this website is for general information
 purposes only.
    The information is provided by My-Yii.com and while we endeavour to 
keep the information up to date and correct,
    we make no representations or warranties of any kind, express or 
implied, about the completeness, accuracy, reliability, suitability
    or availability with respect to the website or the information, 
products, services, or related graphics contained on the website for any
 purpose.
    Any reliance you place on such information is therefore strictly at 
your own risk.
</p>

<p class="text-justify">
    In no event will we be liable for any loss or damage including 
without limitation,
    indirect or consequential loss or damage, or any loss or damage 
whatsoever arising from loss of data or profits arising out of,
    or in connection with, the use of this website.
</p>

<p class="text-justify">
    Through this website you are able to link to other websites which are not under the control of My-Yii.com.
    We have no control over the nature, content and availability of those sites.
    The inclusion of any links does not necessarily imply a recommendation or endorse the views expressed within them.
</p>

<p class="text-justify">
    Every effort is made to keep the website up and running smoothly.
    However, My-Yii.com takes no responsibility for, and will not be 
liable for, the website being temporarily unavailable due to technical 
issues beyond our control.
</p>
<p class="text-justify">
    If you agree to the terms, please check the 'I agree' checkbox and press the 'Signup' button below.
    If you would like to cancel the registration, click <a href="https://www.my-yii.com/">here</a> to return to the site index.
</p>


</div>

</div>
</div>
</div>
</label>
<p class="help-block help-block-error"></p>

</div>
</div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary btn-block" name="signup-button">Register</button>    </div>

</form>
<hr>

<p class="text-center">
    Sign up with
    <a href="https://www.my-yii.com/site/auth?authclient=facebook">
        <img src="Episode.4_files/facebook.png" alt="Facebook logo"> Facebook
    </a>
    or
    <a href="https://www.my-yii.com/site/auth?authclient=github">
        <img src="Episode.4_files/github.png" alt="GitHub logo"> Github
    </a>
</p>
            </div>
        </div>

    
</div>

    <div id="w1" class="list-view"><p>Showing <b>1-8</b> of <b>8</b> items.</p>
<div class="item" data-key="76"><div class="comment">
    <div class="panel panel-info">
        <div class="panel-body">
            <div class="media">
                <div class="media-left">
                    <img class="media-object img-thumbnail center-block" src="Episode.4_files/1478253690.jpg" alt="Li Gang profile picture" width="55px">
                    <p class="text-center">
                        Li Gang                    </p>
                </div>
                <div class="media-body">
                    <blockquote>
                        <p class="text-justify">Hi, I am a new to Yii2, 
and I follow your step, but when I use gii to generat the model, I don’t
 get the getPost() method. I already check my tables relation, it is 
right. But I don’t know why it was not working, any help?</p>
                    </blockquote>
                </div>
            </div>
        </div>
        <div class="panel-footer">
            <span class="glyphicon glyphicon-user"></span> Li Gang            <span class="pull-right">
                <span class="glyphicon glyphicon-calendar"></span> Created: Nov 9, 2016, 12:57:39 PM                                            </span>
        </div>
    </div>
</div>
</div>
<div class="item" data-key="71"><div class="comment">
    <div class="panel panel-info">
        <div class="panel-body">
            <div class="media">
                <div class="media-left">
                    <img class="media-object img-thumbnail center-block" src="Episode.4_files/default-avatar.png" alt="jeansyuan profile picture" width="55px">
                    <p class="text-center">
                        jeansyuan                    </p>
                </div>
                <div class="media-body">
                    <blockquote>
                        <p class="text-justify">Yep.. I know why. The default type of table in Mysql on my computer is MyISAM which doesn’t support foreign keys. 
I recreate these tables with the “tableOptions” param to set the table type as InnoDB and it works.
Thank U for your reply~</p>
                    </blockquote>
                </div>
            </div>
        </div>
        <div class="panel-footer">
            <span class="glyphicon glyphicon-user"></span> jeansyuan            <span class="pull-right">
                <span class="glyphicon glyphicon-calendar"></span> 
Created: Aug 31, 2016, 3:51:14 PM                                    , 
Last updated: Aug 31, 2016, 3:52:45 PM                                  
          </span>
        </div>
    </div>
</div>
</div>
<div class="item" data-key="70"><div class="comment">
    <div class="panel panel-info">
        <div class="panel-body">
            <div class="media">
                <div class="media-left">
                    <img class="media-object img-thumbnail center-block" src="Episode.4_files/1440113828.png" alt="Jaroslav Pulik profile picture" width="55px">
                    <p class="text-center">
                        Jaroslav Pulik                    </p>
                </div>
                <div class="media-body">
                    <blockquote>
                        <p class="text-justify">Hello jeansyuan,<br>
No, Gii will also generate the <code>getPosts()</code> and <code>getPostTags()</code>
 methods (as you can see on the picture below). Please check if do you 
have correct relations in your database between individual tables.
<img class="img-responsive img-rounded center-block" src="Episode.4_files/gii_reply_to_comment.png" alt="Yii Framework - Gii code generator" title="Yii Framework - Gii code generator"></p>
                    </blockquote>
                </div>
            </div>
        </div>
        <div class="panel-footer">
            <span class="glyphicon glyphicon-user"></span> Jaroslav Pulik            <span class="pull-right">
                <span class="glyphicon glyphicon-calendar"></span> 
Created: Aug 29, 2016, 10:27:05 PM                                    , 
Last updated: Aug 29, 2016, 10:33:05 PM                                 
           </span>
        </div>
    </div>
</div>
</div>
<div class="item" data-key="68"><div class="comment">
    <div class="panel panel-info">
        <div class="panel-body">
            <div class="media">
                <div class="media-left">
                    <img class="media-object img-thumbnail center-block" src="Episode.4_files/default-avatar.png" alt="jeansyuan profile picture" width="55px">
                    <p class="text-center">
                        jeansyuan                    </p>
                </div>
                <div class="media-body">
                    <blockquote>
                        <p class="text-justify">Hello. I just find that 
in the enhancement, you not only attach the behaviors, but also create 
the function getPosts() in Category and function getPostTags() in Tag. 
Am I right? 
The code generated by gii doesn’t include the two function above.</p>
                    </blockquote>
                </div>
            </div>
        </div>
        <div class="panel-footer">
            <span class="glyphicon glyphicon-user"></span> jeansyuan            <span class="pull-right">
                <span class="glyphicon glyphicon-calendar"></span> 
Created: Aug 29, 2016, 3:59:05 PM                                    , 
Last updated: Aug 29, 2016, 3:59:35 PM                                  
          </span>
        </div>
    </div>
</div>
</div>
<div class="item" data-key="41"><div class="comment">
    <div class="panel panel-info">
        <div class="panel-body">
            <div class="media">
                <div class="media-left">
                    <img class="media-object img-thumbnail center-block" src="Episode.4_files/1440113828.png" alt="Jaroslav Pulik profile picture" width="55px">
                    <p class="text-center">
                        Jaroslav Pulik                    </p>
                </div>
                <div class="media-body">
                    <blockquote>
                        <p class="text-justify">Hello dignityinside, 
You should set global permissions for the whole project with this 
command (Linux): sudo chmod -R a+w ~/path/to/your/project. And set 777 
permissions only to folders like /frontend/runtime, /backend/runtime 
etc…. Or if you are just on the local environment you can set 777 
permissions to whole project to avoid any problems with permissions.</p>
                    </blockquote>
                </div>
            </div>
        </div>
        <div class="panel-footer">
            <span class="glyphicon glyphicon-user"></span> Jaroslav Pulik            <span class="pull-right">
                <span class="glyphicon glyphicon-calendar"></span> Created: Nov 6, 2015, 2:52:23 PM                                            </span>
        </div>
    </div>
</div>
</div>
<div class="item" data-key="34"><div class="comment">
    <div class="panel panel-info">
        <div class="panel-body">
            <div class="media">
                <div class="media-left">
                    <img class="media-object img-thumbnail center-block" src="Episode.4_files/default-avatar.png" alt="dignityinside profile picture" width="55px">
                    <p class="text-center">
                        dignityinside                    </p>
                </div>
                <div class="media-body">
                    <blockquote>
                        <p class="text-justify">Notice: You must set write (777) permissions for “/blog/common/models/” on server.</p>
                    </blockquote>
                </div>
            </div>
        </div>
        <div class="panel-footer">
            <span class="glyphicon glyphicon-user"></span> dignityinside            <span class="pull-right">
                <span class="glyphicon glyphicon-calendar"></span> Created: Nov 5, 2015, 7:32:48 PM                                            </span>
        </div>
    </div>
</div>
</div>
<div class="item" data-key="33"><div class="comment">
    <div class="panel panel-info">
        <div class="panel-body">
            <div class="media">
                <div class="media-left">
                    <img class="media-object img-thumbnail center-block" src="Episode.4_files/default-avatar.png" alt="dignityinside profile picture" width="55px">
                    <p class="text-center">
                        dignityinside                    </p>
                </div>
                <div class="media-body">
                    <blockquote>
                        <p class="text-justify">In “/blog/frontend/config/main-local.php” add to if (!YII_ENV_TEST){}:</p>

<p class="text-justify">$config[‘modules’][‘gii’] = [
        ‘class’ =&gt; \yii\gii\Module::className(),
        ‘allowedIPs’ =&gt; [$_SERVER[‘REMOTE_ADDR’]]
    ];</p>
                    </blockquote>
                </div>
            </div>
        </div>
        <div class="panel-footer">
            <span class="glyphicon glyphicon-user"></span> dignityinside            <span class="pull-right">
                <span class="glyphicon glyphicon-calendar"></span> Created: Nov 5, 2015, 7:15:23 PM                                            </span>
        </div>
    </div>
</div>
</div>
<div class="item" data-key="31"><div class="comment">
    <div class="panel panel-info">
        <div class="panel-body">
            <div class="media">
                <div class="media-left">
                    <img class="media-object img-thumbnail center-block" src="Episode.4_files/default-avatar.png" alt="dignityinside profile picture" width="55px">
                    <p class="text-center">
                        dignityinside                    </p>
                </div>
                <div class="media-body">
                    <blockquote>
                        <p class="text-justify">“Forbidden (#403): You are not allowed to access this page.” on “/blog/frontend/web/gii”.</p>
                    </blockquote>
                </div>
            </div>
        </div>
        <div class="panel-footer">
            <span class="glyphicon glyphicon-user"></span> dignityinside            <span class="pull-right">
                <span class="glyphicon glyphicon-calendar"></span> Created: Nov 5, 2015, 6:43:01 PM                                            </span>
        </div>
    </div>
</div>
</div>
</div>    </div></div>
            
        </div>

        <div class="col-md-3">

            
<div class="">
    <div class="panel">
        <a href="https://www.my-yii.com/learn/view-episode/episode-4-generating-models-with-gii">
            <img class="img-rounded img-responsive center-block" src="Episode.4_files/1443728319.png" alt="Episode 4 - Generating Models with Gii Image">
        </a>
        <div class="panel-body">
            <h1>
                <a href="https://www.my-yii.com/learn/view-episode/episode-4-generating-models-with-gii">
                    Episode 4 - Generating Models with Gii                </a>
            </h1>
        <p>
            </p><p class="text-justify">
<strong>Generating models</strong> with Gii.
<strong>Enhancing and finalizing</strong> generated models.
Attaching <strong>Behaviors</strong> to the models.
</p>        <p></p>
    </div>
    <div class="panel-footer text-center">

        <div class="btn-group btn-group-sm">
                            <a class="btn btn-primary" href="https://www.my-yii.com/learn/view-episode/episode-4-generating-models-with-gii"><span class="glyphicon glyphicon-heart-empty"></span> Free</a>                        <button class="btn btn-default">
                <span class="glyphicon glyphicon-comment"></span> 8            </button>
                    </div>

    </div>
</div>
</div>

            <h5 class=" text-center">
    <strong>My-Yii</strong> is powered by
    <a href="https://my.hawkhost.com/aff.php?aff=8510" target="_blank">
        Hawk Host
    </a>
</h5>

<a href="https://my.hawkhost.com/aff.php?aff=8510" target="_blank">
    <img src="Episode.4_files/img-logo.htm" class="responsive center-block" alt="HowkHost banner">
</a>
        </div>

    </div>

</div>
    </div>
</div>


<footer class="footer">
    <div class="container">
        <div class="row">
            <div class="col-lg-4 col-md-5">
                <div class="well well-sm">
                    <br>
                    <p class="text-center lead">
                        Like us on
                        <a href="https://www.facebook.com/myyiicom" target="_blank">
                            <img src="Episode.4_files/facebook.png" alt="Facebook logo" width="26px"> Facebook
                        </a>
                    </p>
                    <p class="text-center lead">
                        Follow us on
                        <a href="https://twitter.com/myyiicom" target="_blank">
                            <img src="Episode.4_files/twitter.png" alt="Facebook logo"> Twitter
                        </a>
                    </p>
                </div>
            </div>
            <div class="col-lg-4 col-md-4">
                <div class="well well-sm text-center">
                    <p>
                        If do you want to support my work and help me maintain this site, you can donate me at any value.
                        Thank you! <span class="glyphicon glyphicon-heart"></span>
                    </p>
                    <form action="https://www.paypal.com/cgi-bin/webscr" method="post" target="_top">
                        <input name="cmd" value="_s-xclick" type="hidden">
                        <input name="hosted_button_id" value="65WR2372YW4FS" type="hidden">
                        <input src="Episode.4_files/btn_donateCC_LG.gif" name="submit" alt="PayPal - The safer, easier way to pay online!" type="image" border="0">
                        <img alt="Paypal donate button" src="Episode.4_files/pixel.gif" style="display: none !important;" width="1" hidden="" height="1" border="0">
                    </form>
                </div>
            </div>
            <div class="col-lg-4 col-md-3">
                <div class="nav-footer-container">
                    <ul id="w6" class="nav nav-pills nav-stacked nav-footer"><li><a href="https://www.my-yii.com/site/about">About</a></li>
<li><a href="https://www.my-yii.com/site/terms-of-use">Terms of use</a></li>
<li><a href="https://www.my-yii.com/site/privacy-policy">Privacy policy</a></li></ul>                </div>
            </div>
        </div>
        <div class="footer-copyright">
            <p class="text-center small">
                Copyright © 2017 My Yii. All rights reserved.
            </p>
        </div>
    </div>
</footer>
<script async="" src="Episode.4_files/analytics.js"></script><script>
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
            (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-66666967-1', 'auto');
    ga('send', 'pageview');

</script>

<script src="Episode.4_files/all-5b77ff492b574ba03b3758a7bd2e7f78.js"></script>
<script src="Episode.4_files/yii.js"></script>
<script src="Episode.4_files/yii_002.js"></script>
<script src="Episode.4_files/bootstrap.js"></script>
<script src="Episode.4_files/jquery.js"></script>
<script type="text/javascript">jQuery(document).ready(function () {
jQuery('#login-form').yiiActiveForm([{"id":"loginform-email","name":"email","container":".field-loginform-email","input":"#loginform-email","error":".help-block.help-block-error","validate":function (attribute, value, messages, deferred, $form) {yii.validation.required(value, messages, {"message":"Email cannot be blank."});yii.validation.email(value, messages, {"pattern":/^[a-zA-Z0-9!#$%&'*+\/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+\/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$/,"fullPattern":/^[^@]*<[a-zA-Z0-9!#$%&'*+\/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+\/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?>$/,"allowName":false,"message":"Email is not a valid email address.","enableIDN":false,"skipOnEmpty":1});}},{"id":"loginform-password","name":"password","container":".field-loginform-password","input":"#loginform-password","error":".help-block.help-block-error","validate":function (attribute, value, messages, deferred, $form) {yii.validation.required(value, messages, {"message":"Password cannot be blank."});}},{"id":"loginform-rememberme","name":"rememberMe","container":".field-loginform-rememberme","input":"#loginform-rememberme","error":".help-block.help-block-error","validate":function (attribute, value, messages, deferred, $form) {yii.validation.boolean(value, messages, {"trueValue":"1","falseValue":"0","message":"Remember Me must be either \"1\" or \"0\".","skipOnEmpty":1});}}], []);
jQuery('#w0').modal({"show":false});
jQuery('#form-signup').yiiActiveForm([{"id":"signupform-username","name":"username","container":".field-signupform-username","input":"#signupform-username","error":".help-block.help-block-error","validate":function (attribute, value, messages, deferred, $form) {value = yii.validation.trim($form, attribute, []);yii.validation.required(value, messages, {"message":"Username cannot be blank."});yii.validation.string(value, messages, {"message":"Username must be a string.","min":2,"tooShort":"Username should contain at least 2 characters.","max":255,"tooLong":"Username should contain at most 255 characters.","skipOnEmpty":1});}},{"id":"signupform-email","name":"email","container":".field-signupform-email","input":"#signupform-email","error":".help-block.help-block-error","validate":function (attribute, value, messages, deferred, $form) {value = yii.validation.trim($form, attribute, []);yii.validation.email(value, messages, {"pattern":/^[a-zA-Z0-9!#$%&'*+\/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+\/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$/,"fullPattern":/^[^@]*<[a-zA-Z0-9!#$%&'*+\/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+\/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?>$/,"allowName":false,"message":"Email is not a valid email address.","enableIDN":false,"skipOnEmpty":1});yii.validation.string(value, messages, {"message":"Email must be a string.","max":255,"tooLong":"Email should contain at most 255 characters.","skipOnEmpty":1});}},{"id":"signupform-password","name":"password","container":".field-signupform-password","input":"#signupform-password","error":".help-block.help-block-error","validate":function (attribute, value, messages, deferred, $form) {yii.validation.string(value, messages, {"message":"Password must be a string.","min":6,"tooShort":"Password should contain at least 6 characters.","skipOnEmpty":1});}},{"id":"signupform-agreewithrules","name":"agreeWithRules","container":".field-signupform-agreewithrules","input":"#signupform-agreewithrules","error":".help-block.help-block-error","validate":function (attribute, value, messages, deferred, $form) {yii.validation.required(value, messages, {"message":"You must accept forum rules to continue in registration.","requiredValue":1});}}], []);
jQuery(document).pjax("#p0 a", {"push":true,"replace":false,"timeout":1000,"scrollTo":false,"container":"#p0"});
jQuery(document).on("submit", "#p0 form[data-pjax]", function (event) {jQuery.pjax.submit(event, {"push":true,"replace":false,"timeout":1000,"scrollTo":false,"container":"#p0"});});
});</script>

</body></html>